import useDebounce from 'hooks/useDebounce';
// import useFetch from 'hooks/useFetch';
import React, { useCallback, useEffect, useState } from 'react';

const Test = () => {
    const [value, setValue] = useState("");
    const debouncedValue = useDebounce(value, 1000);
    // const [data] = useFetch(`https://demo.dataverse.org/api/search?q=${debouncedValue}`);
    
    const search = useCallback(async () => {
        const res = await fetch(
            `https://demo.dataverse.org/api/search?q=${debouncedValue}`
          );
          const json = await res.json();
          console.log(json);

    }, [debouncedValue]);

    useEffect(() => {
        search();
    }, [debouncedValue, search]);

    return (
        <div className="App">
            <input value={value} onChange={(e) => setValue(e.target.value)} />
        </div>
    );
}

export default Test;
